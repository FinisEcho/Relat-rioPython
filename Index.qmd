---
title: "Relatório Git Github e Python"
subtitle: "Relatório para a disciplina de softwares estatísticos"
author: "Daniel Aprígio Santos de Oliveira" # Autora
lang: pt # Linguagem em português
date: "`r format(Sys.Date())`" # Data do relatório
date-format: short # Formato de data curto: dd/MM/yyyy 
toc: true # Adiciona um índice no relatório
editor: visual
format: 
    html: 
      code-fold: false
      code-tools: true
      theme: 
        light: cosmo
        dark: superhero # Sugestão: superhero/vapor Mudar o tema do relatório aqui
#title-block-banner: capa.png # Substituir imagem aqui
execute:
  warning: false
  message: false
reference-location: margin
citation-location: margin
bibliography: references.bib
self-contained-math: true
embed-resources: true
---

# Introdução:

A adoção de ferramentas que facilitam e automatizam o trabalho é essencial para otimizar processos, especialmente em áreas que envolvem programação. Durante as aulas, foi apresentado o **Git** e o **GitHub**, ferramentas fundamentais para organização e versionamento de código. Essas tecnologias são amplamente utilizadas por desenvolvedores e têm grande relevância também para estatísticos que trabalham com programação, pois permitem o controle eficiente de projetos, colaboração em equipe e armazenamento em nuvem.

Além disso, o Git e o GitHub serão utilizados ao longo da disciplina como suporte para o aprendizado de **Python**, uma linguagem de programação amplamente aplicada em análise de dados e estatística. Este relatório aborda os pontos-chave dessas ferramentas e introduz conceitos básicos de Python.

## Git e GitHub:

1.  Uma breve história do Git

2.  O que são;

3.  Para que servem;

4.  Comandos básicos: git init, git add, git commit, git push, git pull, git clone;

5.  O que é um repositório e um commit.

## pip:

1.  O que é o pip;

2.  Como instalar pacotes com pip install;

3.  Exemplos de bibliotecas populares: pandas, numpy, matplotlib, requests.

## Conceitos iniciais de Python:

1.  Tipos de dados: int, float, str, bool;

2.  Variáveis e operadores básicos;

3.  Listas, tuplas e dicionários;

4.  Estruturas de controle: if, else, elif, for, while;

5.  Funções: definição com def, parâmetros, retorno;

6.  Importação de bibliotecas com import;

7.  Boas práticas: comentários, nomes de variáveis, indentação.

# Referências

::: {#refs}
:::

1.  blablabla

-   alguma coisa **muita coisa** *italico*

``` bash
git --version
```

`git` é uma blablablu